.btn {
  /* pseudoclass (e.g. :hover) is a special state of the selector */
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block; /* because our btn is <a></a> */
    border-radius: 10rem;
    /* transition property has to be on the initial state */
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
  }
  
  &:hover {
    transform: translateY(-3px);
    /* box-shadow: offsetX, offsetY, blure, color */
    box-shadow: 0 1rem 2rem rgba($color-black, .2);

    /* when we hove the btn apply styles to ::after pseudoelement */
    &::after {
      /* we will put transition property on the initial state, and that is .btn::after */
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }
  
  &:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }
  
  /* add virtual el after the el we selected */
  &::after {
    /* necessary properties */
    content: "";
    display: inline-block;
    /* optional properties */
    /* after el is treated as clhild of selected el */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
  }

  &--white {
    background-color: $color-white;
    color: $color-gray-dark;

    &::after {
      background-color: $color-white;
    }
  }
  
  /* only one btn has this animation, so instead of adding the property to .btn or .btn-white, we added a new class */
  &--animated {
    animation: moveInBottom .5s ease-out .75s backwards;
    /* 
      the styles at @keyframes 0% are applied before animation starts 
      shorthand is applied above
      animation-fill-mode: backwards;
    */
  }
}