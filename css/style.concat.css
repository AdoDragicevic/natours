@charset "UTF-8";

@font-face {
  font-family: "linea-basic-10";
  src:url("fonts/linea-basic-10.eot");
  src:url("fonts/linea-basic-10.eot?#iefix") format("embedded-opentype"),
    url("fonts/linea-basic-10.woff") format("woff"),
    url("fonts/linea-basic-10.ttf") format("truetype"),
    url("fonts/linea-basic-10.svg#linea-basic-10") format("svg");
  font-weight: normal;
  font-style: normal;

}

[data-icon]:before {
  font-family: "linea-basic-10" !important;
  content: attr(data-icon);
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

[class^="icon-basic"]:before,
[class*=" icon-basic"]:before {
  font-family: "linea-basic-10" !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-basic-accelerator:before {
  content: "a";
}
.icon-basic-alarm:before {
  content: "b";
}
.icon-basic-anchor:before {
  content: "c";
}
.icon-basic-anticlockwise:before {
  content: "d";
}
.icon-basic-archive:before {
  content: "e";
}
.icon-basic-archive-full:before {
  content: "f";
}
.icon-basic-ban:before {
  content: "g";
}
.icon-basic-battery-charge:before {
  content: "h";
}
.icon-basic-battery-empty:before {
  content: "i";
}
.icon-basic-battery-full:before {
  content: "j";
}
.icon-basic-battery-half:before {
  content: "k";
}
.icon-basic-bolt:before {
  content: "l";
}
.icon-basic-book:before {
  content: "m";
}
.icon-basic-book-pen:before {
  content: "n";
}
.icon-basic-book-pencil:before {
  content: "o";
}
.icon-basic-bookmark:before {
  content: "p";
}
.icon-basic-calculator:before {
  content: "q";
}
.icon-basic-calendar:before {
  content: "r";
}
.icon-basic-cards-diamonds:before {
  content: "s";
}
.icon-basic-cards-hearts:before {
  content: "t";
}
.icon-basic-case:before {
  content: "u";
}
.icon-basic-chronometer:before {
  content: "v";
}
.icon-basic-clessidre:before {
  content: "w";
}
.icon-basic-clock:before {
  content: "x";
}
.icon-basic-clockwise:before {
  content: "y";
}
.icon-basic-cloud:before {
  content: "z";
}
.icon-basic-clubs:before {
  content: "A";
}
.icon-basic-compass:before {
  content: "B";
}
.icon-basic-cup:before {
  content: "C";
}
.icon-basic-diamonds:before {
  content: "D";
}
.icon-basic-display:before {
  content: "E";
}
.icon-basic-download:before {
  content: "F";
}
.icon-basic-exclamation:before {
  content: "G";
}
.icon-basic-eye:before {
  content: "H";
}
.icon-basic-eye-closed:before {
  content: "I";
}
.icon-basic-female:before {
  content: "J";
}
.icon-basic-flag1:before {
  content: "K";
}
.icon-basic-flag2:before {
  content: "L";
}
.icon-basic-floppydisk:before {
  content: "M";
}
.icon-basic-folder:before {
  content: "N";
}
.icon-basic-folder-multiple:before {
  content: "O";
}
.icon-basic-gear:before {
  content: "P";
}
.icon-basic-geolocalize-01:before {
  content: "Q";
}
.icon-basic-geolocalize-05:before {
  content: "R";
}
.icon-basic-globe:before {
  content: "S";
}
.icon-basic-gunsight:before {
  content: "T";
}
.icon-basic-hammer:before {
  content: "U";
}
.icon-basic-headset:before {
  content: "V";
}
.icon-basic-heart:before {
  content: "W";
}
.icon-basic-heart-broken:before {
  content: "X";
}
.icon-basic-helm:before {
  content: "Y";
}
.icon-basic-home:before {
  content: "Z";
}
.icon-basic-info:before {
  content: "0";
}
.icon-basic-ipod:before {
  content: "1";
}
.icon-basic-joypad:before {
  content: "2";
}
.icon-basic-key:before {
  content: "3";
}
.icon-basic-keyboard:before {
  content: "4";
}
.icon-basic-laptop:before {
  content: "5";
}
.icon-basic-life-buoy:before {
  content: "6";
}
.icon-basic-lightbulb:before {
  content: "7";
}
.icon-basic-link:before {
  content: "8";
}
.icon-basic-lock:before {
  content: "9";
}
.icon-basic-lock-open:before {
  content: "!";
}
.icon-basic-magic-mouse:before {
  content: "\"";
}
.icon-basic-magnifier:before {
  content: "#";
}
.icon-basic-magnifier-minus:before {
  content: "$";
}
.icon-basic-magnifier-plus:before {
  content: "%";
}
.icon-basic-mail:before {
  content: "&";
}
.icon-basic-mail-multiple:before {
  content: "'";
}
.icon-basic-mail-open:before {
  content: "(";
}
.icon-basic-mail-open-text:before {
  content: ")";
}
.icon-basic-male:before {
  content: "*";
}
.icon-basic-map:before {
  content: "+";
}
.icon-basic-message:before {
  content: ",";
}
.icon-basic-message-multiple:before {
  content: "-";
}
.icon-basic-message-txt:before {
  content: ".";
}
.icon-basic-mixer2:before {
  content: "/";
}
.icon-basic-mouse:before {
  content: ":";
}
.icon-basic-notebook:before {
  content: ";";
}
.icon-basic-notebook-pen:before {
  content: "<";
}
.icon-basic-notebook-pencil:before {
  content: "=";
}
.icon-basic-paperplane:before {
  content: ">";
}
.icon-basic-pencil-ruler:before {
  content: "?";
}
.icon-basic-pencil-ruler-pen:before {
  content: "@";
}
.icon-basic-photo:before {
  content: "[";
}
.icon-basic-picture:before {
  content: "]";
}
.icon-basic-picture-multiple:before {
  content: "^";
}
.icon-basic-pin1:before {
  content: "_";
}
.icon-basic-pin2:before {
  content: "`";
}
.icon-basic-postcard:before {
  content: "{";
}
.icon-basic-postcard-multiple:before {
  content: "|";
}
.icon-basic-printer:before {
  content: "}";
}
.icon-basic-question:before {
  content: "~";
}
.icon-basic-rss:before {
  content: "\\";
}
.icon-basic-server:before {
  content: "\e000";
}
.icon-basic-server2:before {
  content: "\e001";
}
.icon-basic-server-cloud:before {
  content: "\e002";
}
.icon-basic-server-download:before {
  content: "\e003";
}
.icon-basic-server-upload:before {
  content: "\e004";
}
.icon-basic-settings:before {
  content: "\e005";
}
.icon-basic-share:before {
  content: "\e006";
}
.icon-basic-sheet:before {
  content: "\e007";
}
.icon-basic-sheet-multiple:before {
  content: "\e008";
}
.icon-basic-sheet-pen:before {
  content: "\e009";
}
.icon-basic-sheet-pencil:before {
  content: "\e00a";
}
.icon-basic-sheet-txt:before {
  content: "\e00b";
}
.icon-basic-signs:before {
  content: "\e00c";
}
.icon-basic-smartphone:before {
  content: "\e00d";
}
.icon-basic-spades:before {
  content: "\e00e";
}
.icon-basic-spread:before {
  content: "\e00f";
}
.icon-basic-spread-bookmark:before {
  content: "\e010";
}
.icon-basic-spread-text:before {
  content: "\e011";
}
.icon-basic-spread-text-bookmark:before {
  content: "\e012";
}
.icon-basic-star:before {
  content: "\e013";
}
.icon-basic-tablet:before {
  content: "\e014";
}
.icon-basic-target:before {
  content: "\e015";
}
.icon-basic-todo:before {
  content: "\e016";
}
.icon-basic-todo-pen:before {
  content: "\e017";
}
.icon-basic-todo-pencil:before {
  content: "\e018";
}
.icon-basic-todo-txt:before {
  content: "\e019";
}
.icon-basic-todolist-pen:before {
  content: "\e01a";
}
.icon-basic-todolist-pencil:before {
  content: "\e01b";
}
.icon-basic-trashcan:before {
  content: "\e01c";
}
.icon-basic-trashcan-full:before {
  content: "\e01d";
}
.icon-basic-trashcan-refresh:before {
  content: "\e01e";
}
.icon-basic-trashcan-remove:before {
  content: "\e01f";
}
.icon-basic-upload:before {
  content: "\e020";
}
.icon-basic-usb:before {
  content: "\e021";
}
.icon-basic-video:before {
  content: "\e022";
}
.icon-basic-watch:before {
  content: "\e023";
}
.icon-basic-webpage:before {
  content: "\e024";
}
.icon-basic-webpage-img-txt:before {
  content: "\e025";
}
.icon-basic-webpage-multiple:before {
  content: "\e026";
}
.icon-basic-webpage-txt:before {
  content: "\e027";
}
.icon-basic-world:before {
  content: "\e028";
}

/* simplified version
@mixin respond-phone {
  @media screen and (max-width: $phone-vidth-variable | 600px) {
    @content; // @content allows us to pass a block of code inside the mixin
  }
}
*/
/* basic reset */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* we set box-sizing as inherit, and we define its value in body */
  /* defining it in body, and setting inherit here is a slightly better practice
     since it allows us to set different box-sizing in one part of our code (e.g.
     in one section and it will be inherited by child el in that section)
  */
  box-sizing: inherit; }

/* html selector could be moved to typography file; however, since it defines the base rule for font-size on
   entire project, it is also valid to leave it here
*/
html {
  /* 
    it's good practice to use rem (throughout CSS); if we want to change font-size on our website (e.g. on mobile) 
    we can change the root font-size in body, instead of adding hundreds media queries
  */
  /*
    we want 1 rem to equal 10px, to make our lives easier (it is easier to calculate that 24rem is 240px,
    than it is that 24rem is 24 x 16px
  */
  /*
    to allow users to change the root font-size in the browser, we define 10% as % of 16px (default font-size in most
    browsers), instead of hardcoding it to 10px
    100% = 16%
    10/16 = 62.5
    62.5% = 10%  
  */
  font-size: 62.5%; }
  @media screen and (max-width: 75em) {
    html {
      font-size: 56.25%; } }
  @media screen and (max-width: 56.25em) {
    html {
      font-size: 50%; } }
  @media screen and (min-width: 112.5em) {
    html {
      font-size: 75%; } }

body {
  /* padding & border are not added to el width & hight */
  box-sizing: border-box;
  padding: 3rem; }
  @media screen and (max-width: 56.25em) {
    body {
      padding: 0; } }

::selection {
  background-color: #55c57a;
  color: #fff; }

/*
Two types of animations in css:
  - transition property & change something on (e.g.) :hover
  - keyframes & animation property
For browser performance it's best to only animate opacity and/or transform
Animation fix:
  - sometimes animations introduce a little 'bug', e.g. shaking
  - no one knows why
  - solve it by adding backface-visibility:hidden to parent el
*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    /*
      set multiple transforms like this:
      transform: translateX(-100px) scale(1.2) rotate (20deg);
    */
    transform: translateX(-10rem); }
  80% {
    transform: translate(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translate(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

body {
  color: #777;
  /* set global font properties in body, because font properties are inherited from parent to child el */
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* 1.7 x bigger than the predefined line-height */
  line-height: 1.7; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem;
  /* 
    animation fix
    sometimes animations introduce a little 'bug', e.g. shaking
    no one knows why this is
    we solve it by adding backface-visibility to parent el
  */
  backface-visibility: hidden; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    margin-right: -3.5rem;
    /* only two properties required for animation to work */
    animation-name: moveInLeft;
    animation-duration: 1s;
    /* optional properties */
    animation-delay: 0;
    animation-iteration-count: 1;
    /* num of times animation happens */
    animation-timing-function: ease-out;
    /* value can be a cubic-besier fn */ }
    @media screen and (max-width: 37.5em) {
      .heading-primary--main {
        letter-spacing: 1rem;
        font-size: 5rem; } }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    margin-right: -1.75rem;
    /* animation: name duration timing-function delay iteration-count direction fill-mode; */
    animation: moveInRight 1s ease-in-out; }
    @media screen and (max-width: 37.5em) {
      .heading-primary--sub {
        letter-spacing: .5rem; } }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 2px;
  transition: all .2s;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent; }
  @media screen and (max-width: 56.25em) {
    .heading-secondary {
      font-size: 3rem; } }
  @media screen and (max-width: 37.5em) {
    .heading-secondary {
      font-size: 2.5rem; } }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center !important; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important; }
  @media screen and (max-width: 56.25em) {
    .u-margin-bottom-medium {
      margin-bottom: 3rem !important; } }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }
  @media screen and (max-width: 56.25em) {
    .u-margin-bottom-big {
      margin-bottom: 5rem !important; } }

.u-margin-top-big {
  margin-top: 8rem !important; }

.u-margin-top-huge {
  margin-top: 10rem !important; }

.btn {
  /* pseudoclass (e.g. :hover) is a special state of the selector */
  /* add virtual el after the el we selected */
  /* only one btn has this animation, so instead of adding the property to .btn or .btn-white, we added a new class */ }
  .btn, .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    /* because our btn is <a></a> */
    border-radius: 10rem;
    /* transition property has to be on the initial state */
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
    border: none;
    cursor: pointer; }
  .btn:hover {
    transform: translateY(-3px);
    /* box-shadow: offsetX, offsetY, blure, color */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* when we hover the btn apply styles to ::after pseudoelement */ }
    .btn:hover::after {
      /* we will put transition property on the initial state, and that is .btn::after */
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    outline: none;
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background-color: #55c57a;
    color: #fff; }
    .btn--green::after {
      background-color: #55c57a; }
  .btn::after {
    /* necessary properties */
    content: "";
    display: inline-block;
    /* optional properties */
    /* after el is treated as clhild of selected el */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom .5s ease-out .75s backwards;
    /* 
      the styles at @keyframes 0% are applied before animation starts 
      shorthand is applied above
      animation-fill-mode: backwards;
    */ }

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  font-size: 1.6rem;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 1;
    transition: all .2s, border-radius 1ms;
    outline-offset: 2rem; }
    @media screen and (max-width: 56.25em) {
      .composition__photo {
        position: relative;
        float: left;
        width: 33.3333%;
        box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2); } }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
      @media screen and (max-width: 56.25em) {
        .composition__photo--p1 {
          top: 0;
          transform: scale(1.2); } }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
      @media screen and (max-width: 56.25em) {
        .composition__photo--p2 {
          top: -1rem;
          transform: scale(1.3);
          z-index: 100; } }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
      @media screen and (max-width: 56.25em) {
        .composition__photo--p3 {
          top: 1rem;
          left: 0;
          transform: scale(1.1); } }
    .composition__photo:hover {
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 2;
      border-radius: 0;
      outline: 1.5rem solid #55c57a; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .2s; }
  @media screen and (max-width: 56.25em) {
    .feature-box {
      padding: 2rem; } }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    padding: 0 1px; }
    @media screen and (max-width: 56.25em) {
      .feature-box__icon {
        margin-bottom: 0; } }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem; }
  .card__side {
    border-radius: 3px;
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    transition: all .8s ease;
    position: absolute;
    top: 0;
    left: 0;
    height: 52rem;
    width: 100%;
    backface-visibility: hidden; }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    background-blend-mode: screen; }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: #fff;
    position: absolute;
    top: 12rem;
    right: 2rem;
    text-align: end;
    width: 75%; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }
  @media only screen and (max-width: 56.25em), only screen and (hover: none) {
    .card {
      height: auto;
      border-radius: 3px;
      background-color: #fff;
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
      .card__side {
        position: relative;
        height: auto;
        box-shadow: none; }
        .card__side--back {
          transform: rotateY(0);
          clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%); }
      .card:hover .card__side--front {
        transform: rotateY(0); }
      .card:hover .card__side--back {
        transform: rotateY(0); }
      .card__details {
        padding: 1rem 3rem; }
      .card__cta {
        position: relative;
        top: 0;
        left: 0;
        transform: translate(0);
        width: 100%;
        padding: 7rem 4rem 4rem 4rem; }
      .card__price-box {
        margin-bottom: 3rem; }
      .card__price-value {
        font-size: 4rem; } }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg); }
  @media screen and (max-width: 56.25em) {
    .story {
      width: 100%;
      padding: 4rem;
      padding-left: 7rem; } }
  @media screen and (max-width: 37.5em) {
    .story {
      transform: skewX(0); } }
  .story__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    shape-outside: circle(50% at 50% 50%);
    transform: translateX(-3rem) skewX(12deg);
    border-radius: 50%;
    position: relative;
    backface-visibility: hidden;
    overflow: hidden; }
    @media screen and (max-width: 37.5em) {
      .story__shape {
        transform: translateX(-3rem) skewX(0); } }
    @supports (clip-path: circle(50% at 50% 50%)) {
      .story__shape {
        clip-path: circle(50% at 50% 50%); } }
  .story__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    transition: all .5s;
    backface-visibility: hidden; }
  .story:hover .story__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%); }
  .story__text {
    transform: skewX(12deg); }
    @media screen and (max-width: 37.5em) {
      .story__text {
        transform: skewX(0); } }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 0);
    color: #fff;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all .5s;
    backface-visibility: hidden; }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: .15;
  overflow: hidden; }
  .bg-video__content {
    object-fit: cover;
    height: 100%;
    width: 100%; }

.form__group:not(:last-child) {
  margin-bottom: 2rem; }

.form__input {
  font-size: 1.5rem;
  padding: 1.5rem 2rem;
  border-radius: 2px;
  background-color: rgba(255, 255, 255, 0.5);
  border: none;
  border-bottom: 3px solid transparent;
  width: 90%;
  display: block;
  transition: all .3s;
  font-family: inherit;
  color: inherit; }
  @media screen and (max-width: 56.25em) {
    .form__input {
      width: 100%; } }
  .form__input::-webkit-input-placeholder {
    color: #999; }
  .form__input:focus {
    outline: none;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);
    border-bottom: 3px solid #55c57a; }
  .form__input:focus:invalid {
    border-bottom: 3px solid #ff7730; }

.form__label {
  font-size: 1.2rem;
  font-weight: 700;
  margin-left: 2rem;
  margin-top: .7rem;
  display: block;
  transition: all .3s; }

.form__input:placeholder-shown + .form__label {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-4rem); }

.form__radio-group {
  width: 49%;
  display: inline-block; }
  @media screen and (max-width: 56.25em) {
    .form__radio-group {
      width: 100%;
      margin-bottom: 2rem; } }

.form__radio-label {
  font-size: 1.6rem;
  cursor: pointer;
  position: relative;
  padding-left: 4rem; }

.form__radio-button {
  height: 3rem;
  width: 3rem;
  border: 5px solid #55c57a;
  border-radius: 50%;
  display: inline-block;
  position: absolute;
  top: -.4rem;
  left: 0; }
  .form__radio-button::after {
    content: "";
    display: block;
    height: 1.3rem;
    width: 1.3rem;
    background-color: #55c57a;
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    transition: opacity .2s;
    position: absolute; }

.form__radio-input:checked + .form__radio-label .form__radio-button::after {
  opacity: 1; }

.form__radio-input {
  visibility: hidden; }

.row {
  /* max-width is usually much better choice than width */
  max-width: 114rem;
  margin: 0 auto;
  /* select everything except last row */
  /* attribute selectors
    [src="img/1.jpg"] {} // select elements (imgs) with this exact src
    [alt="Logo"] {} // select elements with this exact alt
    [class*="col"] // select elements with class that contains "col"
    [class^="col"] // select elements with class that starts with "col"
    [class$="col"] // select elements with class that ends with "col"
  */ }
  @media screen and (max-width: 56.25em) {
    .row {
      max-width: 50rem;
      padding: 0 3rem; } }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
    @media screen and (max-width: 56.25em) {
      .row:not(:last-child) {
        margin-bottom: 6rem; } }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
      @media screen and (max-width: 56.25em) {
        .row [class^="col-"]:not(:last-child) {
          margin-right: 0;
          margin-bottom: 6rem; } }
    @media screen and (max-width: 56.25em) {
      .row [class^="col-"] {
        width: 100% !important; } }
  .row .col-1-of-2 {
    width: calc( (100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc( (100% - 6rem * 2) / 3); }
  .row .col-2-of-3 {
    width: calc( ( (100% - 6rem * 2) / 3 ) * 2 + 6rem); }
  .row .col-1-of-4 {
    width: calc( (100% - 6rem * 3) / 4); }
  .row .col-2-of-4 {
    width: calc( ( (100% - 6rem * 3) / 4 ) * 2 + 6rem); }
  .row .col-3-of-4 {
    width: calc( ( (100% - 6rem * 3) / 4 ) * 3 + (6rem * 2)); }

.footer {
  background-color: #333;
  color: #f7f7f7;
  padding: 10rem 0;
  font-size: 1.4rem; }
  @media screen and (max-width: 56.25em) {
    .footer {
      padding: 8rem 0; } }
  .footer__logo-box {
    text-align: center;
    margin-bottom: 8rem; }
    @media screen and (max-width: 56.25em) {
      .footer__logo-box {
        margin-bottom: 6rem; } }
  .footer__logo {
    width: 15rem; }
  .footer__navigation {
    border-top: 1px solid #777;
    padding-top: 2rem;
    display: inline-block; }
    @media screen and (max-width: 56.25em) {
      .footer__navigation {
        width: 100%;
        text-align: center; } }
  .footer__list {
    list-style: none; }
  .footer__list-item {
    display: inline-block; }
    .footer__list-item:not(:last-child) {
      margin-right: 1.5rem; }
  .footer__link:link, .footer__link:visited {
    color: #f7f7f7;
    background-color: #333;
    text-decoration: none;
    text-transform: uppercase;
    display: inline-block;
    transition: all .3s; }
  .footer__link:hover, .footer__link:active {
    color: #55c57a;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
    transform: rotate(5deg) scale(1.3); }
  .footer__copyright {
    border-top: 1px solid #777;
    padding-top: 2rem;
    width: 80%;
    float: right; }
    @media screen and (max-width: 56.25em) {
      .footer__copyright {
        width: 100%;
        float: none;
        text-align: justify; } }

.header {
  position: relative;
  height: 85vh;
  /* we basically have 2 bg imgs, first bg img is on top of the second */
  /* first optional arg in linear-gradient is location ('to right', 'to bottom right') */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero-small.jpg");
  /* cover always tries to fit the img inside the box */
  background-size: cover;
  /* top ensures that no matter the viewport size, the top of the img stays at the top*/
  background-position: top;
  /*
    animating .logo (img) doesn't work; if we do it like this it works fine
    .logo-box:hover .logo {
      animation: moveInRight 0.6s ease-in;
    }
  */ }
  @supports (clip-path: polygon(0 0)) {
    .header {
      /* polygon(x y, x y, x y, x y) */
      /* website for generating: https://bennettfeely.com/clippy/ */
      clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      height: 95vh; } }
  @media screen and (max-width: 37.5em) {
    .header {
      clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); } }
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em), only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), only screen and (min-width: 125em) {
    .header {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg"); } }
  .header__logo-box {
    /* 
      reference from which el with position:absolute counts top/left/right/bottom
      is the first parent el with set position (relative/fixed/absolute)
    */
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    /* best way to center something (top would be 50%) */
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* all inline el are treated as text; text-align will affect them */
    text-align: center; }

.navigation__checkbox {
  display: none; }

.navigation__checkbox:checked + .navigation__button .navigation__icon {
  background-color: transparent; }

.navigation__checkbox:checked + .navigation__button .navigation__icon::before {
  top: 0;
  transform: rotate(135deg); }

.navigation__checkbox:checked + .navigation__button .navigation__icon::after {
  top: 0;
  transform: rotate(-135deg); }

.navigation__button {
  background-color: #fff;
  height: 7rem;
  width: 7rem;
  border-radius: 50%;
  position: fixed;
  top: 6rem;
  right: 6rem;
  z-index: 2000;
  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);
  text-align: center;
  cursor: pointer;
  transition: all .2s; }
  @media screen and (max-width: 56.25em) {
    .navigation__button {
      top: 4rem;
      right: 4rem; } }
  @media screen and (max-width: 37.5em) {
    .navigation__button {
      top: 3rem;
      right: 3rem; } }

.navigation__button:hover .navigation__icon::before {
  top: -1rem;
  height: 1.5px; }

.navigation__button:hover .navigation__icon::after {
  top: 1rem;
  height: 1.5px; }

.navigation__icon {
  position: relative;
  margin-top: 3.5rem; }
  .navigation__icon, .navigation__icon::before, .navigation__icon::after {
    width: 3rem;
    height: 2px;
    background-color: #333;
    display: inline-block; }
  .navigation__icon::before, .navigation__icon::after {
    content: "";
    transition: all .2s;
    position: absolute;
    left: 0; }
  .navigation__icon::before {
    top: -.8rem; }
  .navigation__icon::after {
    top: .8rem; }

.navigation__background {
  height: 6rem;
  width: 6rem;
  border-radius: 50%;
  background-color: #55c57a;
  position: fixed;
  top: 6.5rem;
  right: 6.5rem;
  z-index: 1000;
  transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);
  background-image: radial-gradient(#7ed56f, #28b485); }
  @media screen and (max-width: 56.25em) {
    .navigation__background {
      top: 4.5rem;
      right: 4.5rem; } }
  @media screen and (max-width: 37.5em) {
    .navigation__background {
      top: 3.5rem;
      right: 3.5rem; } }

.navigation__checkbox:checked ~ .navigation__background {
  transform: scale(80); }

.navigation__nav {
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1500;
  opacity: 0;
  transform: translateX(-100vw);
  width: 100%;
  transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55); }

.navigation__checkbox:checked ~ .navigation__nav {
  opacity: 1;
  transform: translate(0); }

.navigation__list {
  list-style: none;
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); }

.navigation__item {
  margin: 1rem; }

.navigation__link:link, .navigation__link:visited {
  font-size: 3rem;
  font-weight: 300;
  padding: 1rem 2rem;
  color: #fff;
  text-transform: uppercase;
  text-decoration: none;
  display: inline-block;
  background-image: linear-gradient(120deg, transparent 0%, transparent 50%, #fff 50%);
  background-size: 220%;
  transition: all .4s; }

.navigation__link:hover, .navigation__link:active {
  background-position: 100%;
  color: #55c57a;
  transform: translateX(1rem); }

.navigation__link span {
  margin-right: 1.5rem;
  display: inline-block; }

.popup {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2000;
  transition: all .3s;
  background-color: rgba(0, 0, 0, 0.8);
  opacity: 0;
  visibility: hidden; }
  @supports (backdrop-filter: blur(10px)) or (-webkit-backdrop-filter: blur(10px)) {
    .popup {
      backdrop-filter: blur(10px);
      background-color: rgba(0, 0, 0, 0.4); } }
  .popup:target {
    opacity: 1;
    visibility: visible; }
  .popup__close:link, .popup__close:visited {
    color: #777;
    position: absolute;
    top: 2.5rem;
    right: 2.5rem;
    text-decoration: none;
    display: inline-block;
    font-size: 3rem;
    line-height: 1; }
  .popup__close:hover {
    color: #55c57a; }
  .popup__content {
    background-color: #fff;
    color: #fff;
    width: 75%;
    box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);
    border-radius: 3px;
    overflow: hidden;
    color: #777;
    position: absolute;
    top: 50%;
    left: 50%;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0);
    transition: all .4s .2s;
    display: table; }
    @media screen and (max-width: 75em) {
      .popup__content {
        width: 80%;
        text-align: center; } }
  .popup:target .popup__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); }
  .popup__left {
    width: 33.3333%;
    display: table-cell;
    vertical-align: middle; }
    @media screen and (max-width: 75em) {
      .popup__left {
        display: table-row;
        width: 100%;
        height: 10rem;
        border: 1px solid red;
        overflow: hidden; } }
  .popup__right {
    width: 66.66667%;
    padding: 3rem 5rem;
    display: table-cell;
    vertical-align: middle; }
    @media screen and (max-width: 75em) {
      .popup__right {
        width: 100%;
        padding: 1rem 3rem 2rem 3rem; } }
  .popup__img {
    display: block;
    width: 100%; }
    @media screen and (max-width: 75em) {
      .popup__img {
        float: left;
        width: 50%;
        display: inline-block;
        height: 20rem;
        background-size: cover; } }
    @media screen and (max-width: 37.5em) {
      .popup__img {
        display: none; }
        .popup__img:last-child {
          display: block;
          width: 100%;
          height: 25rem; } }
  .popup__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    hyphens: auto;
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid #eee; }
    @media screen and (max-width: 75em) {
      .popup__text {
        column-count: 1; } }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
  @media screen and (max-width: 56.25em) {
    .section-about {
      padding: 20rem 0; } }

.section-features {
  padding: 20rem 0;
  margin-top: -10rem;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/nat-4.jpg");
  background-size: cover;
  transform: skewY(-7deg); }
  @media screen and (max-width: 56.25em) {
    .section-features {
      padding: 10rem 0; } }
  .section-features > * {
    transform: skewY(7deg); }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem; }
  @media screen and (max-width: 56.25em) {
    .section-tours {
      padding: 20rem 0 10rem 0; } }

.section-stories {
  padding: 15rem 0;
  position: relative; }
  @media screen and (max-width: 56.25em) {
    .section-stories {
      padding: 10rem 0; } }

.section-booking {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
  @media screen and (max-width: 56.25em) {
    .section-booking {
      padding: 10rem 0; } }

.book {
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  background-size: cover;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.2); }
  @media screen and (max-width: 75em) {
    .book {
      background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 65%, transparent 65%), url(../img/nat-10.jpg); } }
  @media screen and (max-width: 56.25em) {
    .book {
      background-image: linear-gradient(to right, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 100%), url(../img/nat-10.jpg); } }
  .book__form {
    width: 50%;
    padding: 6rem; }
    @media screen and (max-width: 75em) {
      .book__form {
        width: 65%; } }
    @media screen and (max-width: 56.25em) {
      .book__form {
        width: 100%; } }

/*
About CSS

3 Pillars of Good CSS and HTML
  - responsive design
  - maintainable and scalable code
  - web performance

Responsive design principles
  - fluid layouts
    - float, flexbox, css-grid
  - responsive units
  - media queries
  - responsive images

Responsive images
  - 3 options:
      1. Resolution switching 
        - smaller imgs on smaller screens (same img, different size/resolution)
      2. Density switching
        - same as above, but instead of screen size we look fro pixel density
        - e.g. phones with 400px screen width use 2px to show 1px, so we need an img of 800px for
          400px width img
        - pixel density is amout of px in a cm or inch (high vs low resolution screens; @2x vs @1x)
      3. Art direction
        - different img on different screen size
        - when you don't want to share the same img, but a whole differen timg
        - e.g. maybe cropped img or a whole different img
  - tools:
    1. srcset attribute on <img> and <sorce>
    2. css media query
    3. <picture>
  - check the footer logo in HTML, the img composition component in HTML (about section), and header in SASS

Graceful degradation
  - using new css features for newer browsers, while providing simpler styling for older browsers
  - https://caniuse.com/
  - by using @supports in css

How CSS works
  - CSS parsing has 2 steps:
    - resolve conflics (cascade)
    - calculate values (e.g. % to px)

Cascade
  - process of combining stylesheets and resolving conflicts when more than 1 rule applies to 1 el
  - sources: author, user, browser (default, e.g. <a></a> styles)
  - criteria for resolving conflicts:
    - importance (user !important, author !important, author, user, default)
    - specificity (inline, id, class, pseudo, attribute, el, pseudo-el)
    - order (last wins)

  Specificity
    - (inline: 0, id: 0, class: 0, el: 0)
    - universal selector (*) has no specificity value (0, 0, 0, 0)

  Order
    - always include your own stylesheet as last stylesheet in HTML

Values
  - each CSS property must have a value
  - each property has an initial value, used if nothing is declared and there is no inheritance
  - all values are converted to px
  - calculated based on the layout (screen size)
  - browsers specify default root font size (usually 16px)
  - order of precedence: specified, inherited, default
  - 'inherited' value can be use to add inheritance
  - 'initial' value can can be used to reset value to default

  How relative values (e.g. %) are calculated to px
    - % in fonts: measured relative to parents font-size; % x font-size of parent el
    - % in length: measured relative to parents width; reference is always parent el width, % x width of parent
    - em in fonts: reference is parent font-size
    - em in length: reference is current el font-size, e.g. 1.5rem = 1.5 x curr el font-size
    - rem (both in fonts and lengths): relevant to root font-size, e.g. 1.5 rem = 1.5 x 16px
    - vh: 1vh is 1% of viewport height
    - vw: 1vw is 1% of viewport width

Inheritance
  - usually properties related to text are inherited (font-size, line-height, color, font-family)
  - what gets inherited in the computed value, and not the declared value; i.e. inherited values are 
    already conputed! (instead of inheriting 120%, the computed value of 120% is inherited, while 120% 
    is calculated in the parent el, not the el that inherited the value)
  - 'inherited' value can be use to add inheritance

Visual Formating Model
  - algorithm that calculates boxes and determines their layout on the page (dimensions,
  type (inline/block/inline-block), position (floats, absolute position)...)

  Box Model
    - applies to block level boxes
    - each el can be seen as a box
    - content + padding + border + margin
    - fill area (includes everything inside border), gets filled with bg-color or bg-img
    - box width = left border + left padding + specified width + right padding + right border
    - box-sizing: border-box changes the above setting to:
      - paddings and borders are NOT added to the defined dimensions of the box
      - box widht = specified width
  Box Types
    - inline, block, inline-block
    - block
      - display: block
      - display: flex/table/list-item also produce block level el
      - occupies as much space as possible (usually whole line)
    - inline
      - display: inline
      - no height or width property
      - paddings and margins exist only on left and right side
      - takes the minimum space required for its content
    - inline-blcok
      - display: inline-block
      - inline el that work as block level el
    Positioning
      - normal flow / floats / absolute positioning
      - normal flows
        - what happens to el by default
      - floats
        - el is removed from its natural flow and shifted to left/right as far
          as possible, until it touches edge of containing box (or another float el)
        - inline elements will wrap around the floated el
        - container will not adjust its height to the floated el (sometimes can be
          problematic; solution is to use clear-fixes)
      - absolute / fixed
        - el is taken out of the normal flow
        - el does not 'communicate' with other el outside of it
        - absolute is positioned relative to first parent el with display:relative
        - fixed is positioned relative to root el
    Stacking context
      - layers of content
      - z-index
      - there are other propeties as alternative to z-index (e.g. opacity)

CSS Architecture

Think -> Build -> Architect
  - mindset
  - think about layout before writing code
  - build layout in HTML & CSS with consistent structure for naming classes (e.g. BEM)
  - create logical architecture for CSS with files and folders

Component driven design
  - divide page into modular reusable components
  - components building blocks for UI
  - components are held together by layout
  - components are reusable across projects
  - components are usually independant
  
BEM
  - every el is a class (low specificity -> clean and scalable code)
  - block__element--modifier
  - block: stand-alone component that is meaningful on its own; possibly reusable
  - element: part of block, has no standalone meaning
  - modifier: different verison of block or element (e.g. .btn--white)
  - e.g. <a class="recepie__btn btn btn--round"></a>

Architecture
  - logical files and folders structure
  - 7-1, it css, smacks, etc.
  - 7-1 pattern:
    - 1 main sass file to import all other files to
    - 7 folders:
      - base: basic project definitions
      - components: 1 file per reusable component
      - layout: website layout
      - pages: page specific styles
      - themes: e.g. dark/light mode
      - abstracts: code that doesn't output css (e.g. variables) 
      - vendors: third-party CSS

Pseudo class
- state of element, e.g.: :visited, :link, :hover

Pseudo element
- something on the page, e.g.: ::before, ::after, ::webkit-input-placeholder

Sass
  - compiler
  - gives us: variables, nesting, operators, partials, 
    imports, mixins, functions, extends, control directives (conditionals and loops)
  - 2 syntaxes: sass, scss
  - variables: $color-primary: #eee; color: $color-primary
  - functions: darken($color-white, 50%), lighten($color-gray-dark, 15%)
  - mixin: container for code that can be reused
    - @mixin myMixinName { }
    - @include mxMixinName;
    - mixins can accept arguments!
      - @mixin style-text($color) { color: $color; font-size: 22rem }
    - functions
      - build-in functions, e.g. darken(), lighten()
      - @function divide($a, $b) {
          @return $a / $b;
        }
      - @divide(60, 2) * 1px; // this will return 30px instead of 30
  - extend: we write a placeholder with styles in it and have another selector extend that placeholder
    - %btn-placeholder { }
    - @extend %btn-placeholder;
    - as opposed to mixin, the code is not copied inside selectors where mixing is called,
    - the selectors where extend is called are coppied to the code in the extend
    - you should only ever use extend if the selectors (to which tge ruels are extended) are thematically related,
      e.g. you use it inside .btn-lg and .btn-sm
    - othervise it's better to use mixins (for mainainability)

Build process:
  1. main.scss
  2. style.comp.css
  3. style.concat.css (concat all css files; e.g. add bootstrap to your css)
  4. style.prefix.css 
  5. style.min.css
*/
